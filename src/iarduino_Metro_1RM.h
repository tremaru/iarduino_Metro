																										//
#ifndef iarduino_Metro_1RM_h																			//	Функции работы с RGB светодиодом.
#define iarduino_Metro_1RM_h																			//
																										//
class iarduino_Metro_1RM: public iarduino_Metro_BASE{													//	Определяем производный класс iarduino_Metro_1RM.
	public:																								//
	/**	функции данного производного класса iarduino_Metro_1RM		**/									//
	/**	дублирую функции полиморфного класса iarduino_Metro_BASE	**/									//
																										//
//		Функции не используемые в данном модуле:														//
		bool	begin			(int i0=NOT2, int i1=NOT2	){return 0;}								//	Инициализация модуля.
		int		test			(int i0=NOT2, int i1=NOT2	){return 0;}								//	Самотестирование модуля.
		long	getVar			(int i0=NOT2				){return 0;}								//	Возврат значений переменных.
		void	setVar			(int i0=NOT2, int i1=NOT2	){        ;}								//	Получение значений переменных.
																										//
//		Выполняем действия:																				//
		bool	action			(int i0=NOT2, int i1=NOT2	){											//	
								uint8_t data[8] = {0,0,0,0,1,0,0,0};									//	Определяем массив для хранения данных пакетно записываемых в модуль (FLG=0, R=0, G=0, B=0, ON=1, OFF=0, BLK=0, FUNC=0).
								bool    result  = false;												//	Определяем флаг результата возвращаемый функцией action.
								uint8_t sumtry  = 10;													//	Количество попыток чтения/записи.
								switch(i0){																//
								//	Действие № 0 - отключить светодиод:									//
									case 0:																//
										do{	result = objI2C.writeBytes( i1, REG_DATA, data, 7);			//	Записываем 7 элементов массива data в модуль с адресом i1, начиная с регистра REG_DATA.
											sumtry	--;	if(!result){delay(1);}							//	Уменьшаем количество попыток записи и устанавливаем задержку при неудаче.
										}	while		(!result && sumtry>0);							//	Повторяем запись если она завершилась неудачей, но не более sumtry попыток.
									break;																//
								//	Действие № 1 - включить светодиод:									//
									case 1:																//
										data[0] = 0x03;													//	Устанавливаем статусные флаги START и BLINK.
										data[1] = 0xFF;													//	Определяем коэффициент заполнения ШИМ для канала красного цвета.
										data[2] = 0xFF;													//	Определяем коэффициент заполнения ШИМ для канала зелёного цвета.
										data[3] = 0xFF;													//	Определяем коэффициент заполнения ШИМ для канала синего   цвета.
										data[4] = 0x01;													//	Определяем время длительности свечения.
										data[5] = 0x00;													//	Определяем время паузы между свечением.
										data[6] = 0x00;													//	Определяем количество миганий.
										do{	result = objI2C.writeBytes( i1, REG_DATA, data, 7);			//	Записываем 7 элементов массива data в модуль с адресом i1, начиная с регистра REG_DATA.
											sumtry	--;	if(!result){delay(1);}							//	Уменьшаем количество попыток записи и устанавливаем задержку при неудаче.
										}	while		(!result && sumtry>0);							//	Повторяем запись если она завершилась неудачей, но не более sumtry попыток.
									break;																//
								}																		//
								return result;															//
		}																								//
																										//
	private:																							//
};																										//
																										//
#endif																									//

/* =======================================================================================================================================================================================================

Действия функций библиотеки:

off();             - отключить.
on();              - включить.

Таблица регистров модуля:

                   ╔══════════════╤══════════════╤══════════════╤══════════════╤══════════════╤══════════════╤══════════════╤══════════════╤═════════════════════════════════════════════════════════════╗
                   ║       7      │       6      │       5      │       4      │       3      │       2      │       1      │       0      │                                                             ║
                   ╠══════════════╪══════════════╪══════════════╪══════════════╪══════════════╪══════════════╪══════════════╪══════════════╪═════════════════════════════════════════════════════════════╣
0x00 REG_FLAGS_0   ║  FLG_RESET   │FLG_SELF_TEST │       -      │       -      │       -      │       -      │GET_PIN_ADDRES│GET_PIN_OUTPUT│ Служебные флаги для чтения.                                 ║
0x01 REG_BITS_0    ║  SET_RESET   │SET_SELF_TEST │       -      │       -      │       -      │       -      │       -      │SET_PIN_OUTPUT│ Служебные флаги для записи.                                 ║
0x02 REG_FLAGS_1   ║       -      │       -      │       -      │       -      │       -      │       -      │       -      │       -      │ Служебные флаги для чтения.                                 ║
0x03 REG_BITS_1    ║       -      │       -      │       -      │       -      │       -      │       -      │       -      │       -      │ Служебные флаги для записи.                                 ║
                   ╟──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┼─────────────────────────────────────────────────────────────╢
0x04 REG_MODEL   █ ║                                                             MODEL  [7-0] = 0x02 - светодиод RGB                       │ Тип датчика                                                 ║
0x05 REG_VERSION   ║                                                             VERSION[7-0] = 0x00                                       │ Версия прошивки                                             ║
0x06 REG_ADDRESS   ║                                                             ADDRESS[6-0] = 0x09                        │ IF_PIN_ADDRES│ Текущий адрес на шине                                       ║
0x07 REG_CHIP_ID   ║                                                             CHIP_ID[7-0] = 0xC3                                       │ ID линейки чипов                                            ║
                   ╟───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────╢
0x08 REG_WRITE   █ ║                                                             FREQUENCY[7-0] = 0x64 = 100 Гц                            │ Частота ШИМ в Гц                                            ║
0x09 REG_WRITE+1   ║                                                             WRITE_1[7-0]                                              │ Зарезервирован                                              ║
0x0A REG_WRITE+2   ║                                                             WRITE_2[7-0]                                              │ Зарезервирован                                              ║
0x0B REG_WRITE+3   ║                                                             WRITE_3[7-0]                                              │ Зарезервирован                                              ║
0x0C REG_WRITE+4   ║                                                             WRITE_4[7-0]                                              │ Зарезервирован                                              ║
0x0D REG_WRITE+5   ║                                                             WRITE_5[7-0]                                              │ Зарезервирован                                              ║
0x0E REG_WRITE+6   ║                                                             WRITE_6[7-0]                                              │ Зарезервирован                                              ║
0x0F REG_WRITE+7   ║                                                             WRITE_7[7-0]                                              │ Зарезервирован                                              ║
                   ╟──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────┬──────────────┼─────────────────────────────────────────────────────────────╢
0x10 REG_DATA    █ ║       -      │       -      │       -      │       -      │       -      │       -      │    BLINK     │    START     │ Статусные флаги                                             ║
                 █ ╟──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┴──────────────┼─────────────────────────────────────────────────────────────╢
0x11 REG_DATA+1  █ ║                                                             RED[7-0]                                                  │ Значение ШИМ для канала красного цвета.                     ║
0x12 REG_DATA+2  █ ║                                                             GREEN[7-0]                                                │ Значение ШИМ для канала зелёного цвета.                     ║
0x13 REG_DATA+3  █ ║                                                             BLUE[7-0]                                                 │ Значение ШИМ для канала синего цвета.                       ║
0x14 REG_DATA+4  █ ║                                                             TIME_ON[7-0]                                              │ Время в течении которого ШИМ должен быть установлен.        ║
0x15 REG_DATA+5  █ ║                                                             TIME_OFF[7-0]                                             │ Время в течении которого нужно отключить все каналы цвета.  ║
0x16 REG_DATA+6  █ ║                                                             START_BLINK_SUM[7-0]                                      │ Количество миганий (сколько раз выполнить цикл TIME_ON_OFF).║
0x17 REG_DATA+7  █ ║                                                             FUNCTIONS[7-0]                                            │ Дополнительные функции работы светодиода.                   ║
                   ╚═══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╧═════════════════════════════════════════════════════════════╝

FREQUENCY        - Частота ШИМ в Гц.
BLINK            - Флаг указывает установить флаг START после его сброса.
START            - Флаг указывает установить ШИМ и начать отсчет времени TIME_ON + TIME_OFF после чего сбросить флаг START.
                   Установка бита START - приведёт к установке ШИМ и началу отсчёта времени TIME_ON + TIME_OFF.
                   Сброс     бита START - приведёт прекращению отсчёта времени TIME_ON + TIME_OFF и отключению ШИМ вне зависимости от состояния флага BLINK.
RED              - Значение ШИМ для канала красного цвета.
GREEN            - Значение ШИМ для канала зелёного цвета.
BLUE             - Значение ШИМ для канала синего   цвета.
TIME_ON          - Время в течении которого ШИМ должен быть установлен (время в десятых долях секунд: от 0.0 до 25.5 сек.).
TIME_OFF         - Время в течении которого нужно отключить все каналы цвета (время в десятых долях секунд: от 0.0 до 25.5 сек.).
START_BLINK_SUM  - Запись ненулевого значения установит флаг START и сбросит флаг BLINK, но модуль будет вести себя так, как будто флаг BLINK установлен.
                   С каждым циклом TIME_ON + TIME_OFF значение регистра START_BLINK_SUM будет уменьшаться, пока не достигнет 0, тогда флаг START будет сброшен.
FUNCTIONS        - Дополнительные функции работы светодиода. Если установлено значение больше 0, то флаги регистра 0x10 игнорируются.
                   Сброс в 0 приводит к сбросу флага START, значит для перехода в обычный режим работы, нужно сначала сбросить FUNCTIONS, подождать 3-4 мс, а уже потом установить флаг START.

*/