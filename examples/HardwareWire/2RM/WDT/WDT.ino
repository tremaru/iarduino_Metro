// ПРИМЕР РАБОТЫ СТОРОЖЕВОГО ТАЙМЕРА НА ОДНОМ МОДУЛЕ РЕЛЕ:                             //
// Сторожевой таймер модуля отключает реле при зависании Arduino или потере связи.     //
                                                                                       //
// (2RM) Реле электромеханическое на 2 канала (Metro-модуль):                          //
// (8X8) LED Матрица 8x8 - I2C (Metro-модуль):                                         // https://iarduino.ru/shop/Expansion-payments/led-matrica-8x8---i2c-metro-modul.html
// (BUZ) Зуммер - I2C (Metro-модуль):                                                  // https://iarduino.ru/shop/Expansion-payments/zummer---i2c-metro-modul.html
// (DHT) Датчик температуры и влажности - I2C (Metro-модуль):                          // https://iarduino.ru/shop/Sensory-Datchiki/metro_temperature_humidity.html
// (DSL) Датчик освещенности, люксметр - I2C (Metro-модуль):                           // https://iarduino.ru/shop/Sensory-Datchiki/metro_luxmeter.html
// (EXT) Расширитель выводов - I2C (Metro-модуль):                                     // https://iarduino.ru/shop/Expansion-payments/metro-expander.html
// (KEY) Кнопка - I2C (Metro-модуль):                                                  // https://iarduino.ru/shop/Expansion-payments/knopka---i2c-metro-modul.html
// (RES) Потенциометр - I2C (Metro-модуль):                                            //
// (RGB) RGB светодиод - I2C (Metro-модуль):                                           // https://iarduino.ru/shop/Expansion-payments/rgb-svetodiod---i2c-metro-modul.html
// Плата управления Metro Leonardo:                                                    // https://iarduino.ru/shop/boards/metro-leonardo.html
// Плата управления Metro ESP:                                                         // https://iarduino.ru/shop/boards/metro-esp.html
// Информация о подключении модулей к шине I2C:                                        // https://wiki.iarduino.ru/page/i2c_connection/
                                                                                       //
#include <Wire.h>                                                                      // Подключаем библиотеку для работы с аппаратной шиной I2C, до подключения библиотеки iarduino_Metro.
#include <iarduino_Metro.h>                                                            // Подключаем библиотеку.
                                                                                       //
uint8_t sum;                                                                           // Объявляем переменную для хранения количества найденных модулей Metro.
                                                                                       //
void setup(){                                                                          //
//  Определяем все модули на шине I2C и сохраняем их количество в переменную sum:      //
    sum=iarduino_Metro_Start(&Wire); // &Wire1, &Wire2 ...                             // Функция принимает два необязательных параметра: ссылка на объект шины I2C (по умолчанию &Wire), номер адресного вывода (по умолчанию 12).
//  Теперь нам доступен массив Metro содержащий sum элементов для управления модулями. // Metro[0] управляет ближайшим к Arduino модулем, Metro[1] управляет следующим модулем и т.д до последнего модуля Metro[sum-1].
                                                                                       //
//  Проверяем наличие модулей Metro на шине I2C:                                       //
    while(sum==0){;}                                                                   // Если модули Metro не обнаружены, то входим в бесконечный цикл while, тогда цикл loop выполняться не будет.
    while(Metro[0].model!=MOD_2RM){;}                                                  // Если ближайший к Arduino модуль Metro не является модулем реле, то так же входим в бесконечный цикл while.
                                                                                       //
//  Включаем все реле:                                                                 //
    Metro[0].on();                                                                     // Включаем все реле. Возможные параметры: on(1) - первое реле, on(2) - второе реле, on() - все реле.
}                                                                                      //
                                                                                       //
void loop(){                                                                           //
//  Указываем время сторожевого таймера:                                               //
    Metro[0].set(5);                                                                   // Устанавливаем таймер на 5 секунды.
//  Ждём:                                                                              //
    delay(1000);                                                                       // Ждём 1 секунду.
}                                                                                      //
                                                                                       //
//  В этом примере включаются оба канала реле: Metro[0].on(), а потом каждую секунду   //
//  отправляется команда установки сторожевого таймера в 5 секунд: Metro[0].set(5).    //
//  Сторожевой таймер ведёт отсчёт от указанного времени (5сек) до 0 и отключает реле. //
//  Но скетч не даёт таймеру досчитать до 0, так как каждую секунду отправляет новую   //
//  команду установить время таймера в 5 секунд. Таймер успевает досчитать от 5 до 4.  //
                                                                                       //
//  Если имитировать зависание управляющей платы (нажать и удерживать кнопку RESET),   //
//  то плата управления перестанет отправлять команды установки таймера в 5 секунд,    //
//  значит таймер модуля сможет досчитать от 5 до 0 и отключит реле.                   //
                                                                                       //
//  Загрузите скетч, убедитесь что реле включились и не отключаются.                   //
//  Удерживайте кнопку RESET на управляющей плате, реле отключатся в течении 5 секунд. //
